# %LEVEL%=DEBUG,INFO,WARN,ERROR,FATAL
# %APPENDER%=A1或A2或A1,A2
log4j.rootLogger=%LEVEL%,%APPENDER%

# A1 is set to be ConsoleAppender sending its output to System.out
log4j.appender.A1=org.apache.log4j.ConsoleAppender

# A1 uses PatternLayout.
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=%d %-5p (%F:%L) - %m%n
#log4j.appender.A1.layout.ConversionPattern=%d %-5p [%t] %-17c{2} (%13F:%L) %3x - %m%n

# Appender A2 writes to the file "test".
log4j.appender.A2=org.apache.log4j.RollingFileAppender

# 档名可使用变数: 
#    %WWWROOT%=c:/wwwroot/xxx, log4j.apender.A2.File=%WWWROOT%/logs/test.log
#    %LOGFILE%=test.log, log4j.apender.A2.File=%WWWROOT%/logs/%LOGFILE%
log4j.appender.A2.File=%WWWROOT%/logs/%LOGFILE%

# %MAXSIZE%=9999KB, 如1024KB
log4j.appender.A2.MaxFileSize=%MAXSIZE%

# %MAXFILES%=最多几个档, 如20
log4j.appender.A2.MaxBackupIndex=%MAXFILES%

# Truncate 'test' if it aleady exists.
log4j.appender.A2.Append=true

# Appender A2 uses the PatternLayout.
# Layout字元对照:
#    %c Logger名称		%d 记录的日期与时间		%m 要输出的讯息
#    %n 换行符号		%p 输出的优先度			%r 经过时间
#    %t 产生Log的Thread		%% 输出百分号			%C 类别名称*
#    %F 产生Log的档名*		%L 产生Log的行号*		%- 减号表示左靠
#    %数字 输出的长度限制
log4j.appender.A2.layout=org.apache.log4j.PatternLayout
log4j.appender.A2.layout.ConversionPattern=%d{yyyy/MM/dd HH:mm:ss} %-5p (%13F:%L) %m%n

# In this example, we are not interested in INNER loop or SWAP
# messages.  You might try to set INNER and SWAP to DEBUG for more
# verbose output.

#log4j.logger.org.apache.log4j.examples.SortAlgo.INNER=INFO
#log4j.logger.org.apache.log4j.examples.SortAlgo.SWAP=INFO
