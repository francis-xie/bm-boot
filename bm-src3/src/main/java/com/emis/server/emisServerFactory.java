package com.emis.server;import javax.servlet.ServletContext;public class emisServerFactory {  private emisServerFactory() {  }  public static emisServer getServer(ServletContext oContext) {    return (emisServer) oContext.getAttribute(emisServer.STR_EMIS_SERVER);  }  /**   * eventBoot 是說資料庫建立連線的 event 產生後   * 觸發其他 Server Object 的建立   * 測試時要傳 false   *   * @return ePos Server Object   */  public static synchronized emisServer createServer(ServletContext oContext, String sDocumentRoot, String sConfigFile, boolean eventBoot) throws Exception {    emisServer Server_ = getServer(oContext);    if (Server_ == null) {      Server_ = new emisServerImpl(oContext, sConfigFile, eventBoot);      /*      String _sBindName = Server_.getServerName();      // rmi bind      String _isBind = _oProp.getProperty("rmi.server.bind");      if( _isBind != null )      {          if( _isBind.equalsIgnoreCase("true") )          {              Hashtable _oHash = new Hashtable();              _oHash.put("java.naming.factory.initial","com.sun.jndi.cosnaming.CNCtxFactory");              InitialContext context = new InitialContext(_oHash);              context.bind(_sBindName,Server_);          }      }      */    }    return Server_;  }}