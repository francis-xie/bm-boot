/* $Header: /repository/src3/src/com/emis/business/emisBusinessResourceBean.java,v 1.1.1.1 2005/10/14 12:41:51 andy Exp $ * 2003/09/03 Jerry: Add debugging information */package com.emis.business;import com.emis.db.emisDb;import com.emis.file.emisFileMgr;import com.emis.user.emisUser;import com.emis.user.emisCertFactory;import javax.servlet.ServletContext;import java.util.HashMap;import java.util.Hashtable;/** * 此為系統資源物件: 在同一個交易動作中作為多個emisAbstractTransaction 物件的溝通橋樑* * @author emis Jacky */public class emisBusinessResourceBean {  private emisDb oDb_;  private emisPboFormBean oFormBean_;  private ServletContext oContext_;  private emisHttpServletRequest request_;  private emisHttpServletResponse response_;  private emisErrorEvent errorEvent_;  private String sProjectName_;  private boolean isAD_ = false;  private int UseCase_;  private Hashtable Map_;  private emisFileMgr fileMgr_;  private HashMap hmParameterData_ = new HashMap();  private emisBusiness Business;  private emisUser oUser_ = null;  public emisBusiness getBusiness() {    return this.Business;  }  public void setBusiness(emisBusiness business) {    this.Business = business;  }  /**   * 設定參數資料 用以作資料的傳遞與溝通 *   * @param oID*   * @param oObj   */  public void setParameterData(Object oID, Object oObj) {    hmParameterData_.put(oID, oObj);  }  /**   * 取得參數資料 取得由 setParameterData 方法 存入的資料   * @param oID   * @return   */  public Object getParameterData(Object oID) {    return hmParameterData_.get(oID);  }  /**   * 取得目前的檔案管理系統的資訊   * @return   */  public emisFileMgr getFileMgr() {    if (fileMgr_ == null) {      try {        fileMgr_ = emisFileMgr.getInstance(oContext_);      } catch (Exception e) {        e.printStackTrace();  //To change body of catch statement use Options | File Templates.      }    }    return fileMgr_;  }  /**   * 設定目前的檔案管理系統   * @param fileMgr   */  public void setFileMgr(emisFileMgr fileMgr) {    this.fileMgr_ = fileMgr;  }  public emisBusinessResourceBean() {    Map_ = new Hashtable();  }  /**   * 取得前端畫面資訊   * @return ; 由前端傳進來的畫面Form內之物件   */  public emisFormBean getEmisFormBean() {    return oFormBean_;  }  /**   * 提供前端之 Form bean 物件   * @return ; 由前端傳進來的畫面Form內之物件   */  public emisPboFormBean getEmisPboFormBean() {    return oFormBean_;  }  public void setUseCase(int UseCase) {    this.UseCase_ = UseCase;  }  public int getUseCase() {    return UseCase_;  }  /**   * 設定目前專案的英文代碼   * @param sProjectName   */  public void setProjectName(String sProjectName) {    this.sProjectName_ = sProjectName;  }  /**   * 取得目前的專案代碼   * @return   */  public String getProjectName() {    return sProjectName_;  }  /**   * 設定目前與資料庫連結的物件   * @param oDb   */  public void setEmisDb(emisDb oDb) {    this.oDb_ = oDb;  }  /**   * 取得目前與資料庫連結的物件   * @return   */  public emisDb getEmisDb() {    return oDb_;  }  public void setEmisHttpServletRequest(emisHttpServletRequest request) {    this.request_ = request;    this.oFormBean_ = new emisPboFormBean(request);  }  public emisHttpServletRequest getEmisHttpServletRequset() {    return request_;  }  public void setEmisHttpServletResponse(emisHttpServletResponse response) {    this.response_ = response;  }  public emisHttpServletResponse getEmisHttpServletResponse() {    return response_;  }  /**   *  設定目前 web application  server的物件   * @param oContext  : (web application  server 物件) 程式可透過此物件取的Server上的相關資訊   */  public void setServletContext(ServletContext oContext) {    this.oContext_ = oContext;  }  /**   * 取得目前web application server的資訊   * @return :   (web application  server 物件) 程式可透過此物件取的Server上的相關資訊   */  public ServletContext getServletContext() {    return oContext_;  }  /**   * 設定目前發生的錯誤事件   * @param errorEvent 目前發生的錯誤物件   */  public void setEmisErrorEvent(emisErrorEvent errorEvent) {    this.errorEvent_ = errorEvent;  }  /**   * 取得最後一次發生的錯誤物件   * @return   */  public emisErrorEvent getEmisErrorEvent() {    return errorEvent_;  }  public void setPart(String sKey, Object obj) {    Map_.put(sKey, obj);  }  public Object getPart(String sKey) {    return Map_.get(sKey);  }  public boolean isAD() {    return isAD_;  }  public void setAD_(boolean AD_) {    this.isAD_ = AD_;  }  public emisUser getUser() {    if (oUser_ == null) {      try {        oUser_ = emisCertFactory.getUser(getServletContext(), getEmisHttpServletRequset());      } catch (Exception e) {      }    }    return oUser_;  }}