package com.emis.user;import javax.servlet.http.HttpSession;import javax.servlet.http.HttpSessionBindingEvent;import java.util.HashMap;import java.util.Properties;/** * 此 class 是因應有些作業需要拿 emisBusiness 物件, * 但是不需要 login 的作業, emisPseudoUser 的 Group 是 * "SYS" , 其他的回傳值都沒有甚麼意義 * */public class emisPseudoUser implements emisUser{    private HashMap oMap_ = new HashMap();    public emisPseudoUser(HttpSession session)    {      session.removeAttribute(emisCertFactory.EMIS_USER_BIND_NAME);      session.setAttribute(emisCertFactory.EMIS_USER_BIND_NAME,this);    }    public emisPseudoUser()    {    }    public String getID()    {      return "PseudoUser";    }    public String getName()    {      return "PseudoUser";    }    public String getGroups()    {      return "SYS";    }    public String getMailAddr()    {      return "Pseudo@Psuedo";    }    public boolean setPasswd(String sNewPasswd,String sOldPasswd,String sConfirmPasswd)    {      return false;    }    public String getUniqueID()    {      return "0";    }    public void setAttribute(Object oKey,Object oObj)    {      oMap_.put(oKey,oObj);    }    public Object getAttribute(Object oKey)    {      return oMap_.get(oKey);    }    public Object removeAttribute(Object oKey)    {      return oMap_.remove(oKey);    }    public void clearAttribute()    {      oMap_.clear();    }    public void setDebug(boolean isDebug)    {        if( isDebug )        {           this.setAttribute("_DEBUG_","true");        } else {           this.setAttribute("_DEBUG_","false");        }    }    public boolean isDebug()    {        String _isDebug = (String) this.getAttribute("_DEBUG_");        if( "true".equalsIgnoreCase(_isDebug) )        {            return true;        }        return false;    }    public String getProperty(String sPropName) throws Exception    {        return null;    }    public String getSNo()    {        return null;    }    public String getCompanyNo()    {        return null;    }    public emisPermission getMenuPermission(String sKey)    {        return null;    }    public void valueBound(HttpSessionBindingEvent event)    {    }    public void valueUnbound(HttpSessionBindingEvent event)    {    }    public boolean isAuthorized (String sPasswd)    {      return false;    }    public Properties getUserInfo(String sUserId) throws Exception    {        return null;    }    public Properties getUserStoreInfo() throws Exception    {        return null;    }    public int getUserType() {      return -1;    }    /**    * 傳回使用者 KEY 值 Cliff 91.11.12    */    public String getStKey() {      return "";    }    /**    * 傳回使用者使用者區權限 Cliff 91.11.12    */    public String getRNo() throws Exception {      try {      } catch (Exception e) { }      return "";    }    /**    * 目的: 取得使用者區權限字串 For SQL    */    public String getRNoStr() throws Exception {      try {      } catch (Exception e) { }      return "";    }  /**   * 目的:  使用者是否能看成本.   */  public String getIs_amt() {    return (String)oMap_.get("IS_AMT");  }}